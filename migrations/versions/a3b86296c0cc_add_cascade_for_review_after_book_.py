"""add cascade for review after book deletion

Revision ID: a3b86296c0cc
Revises: 3dda41e67a69
Create Date: 2025-10-22 17:20:25.363853

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel 


# revision identifiers, used by Alembic.
revision: str = 'a3b86296c0cc'
down_revision: Union[str, Sequence[str], None] = '3dda41e67a69'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('books', 'user_uid',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint(op.f('books_user_uid_fkey'), 'books', type_='foreignkey')
    op.create_foreign_key(None, 'books', 'users', ['user_uid'], ['uid'], ondelete='CASCADE')
    op.alter_column('reviews', 'user_uid',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('reviews', 'book_uid',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint(op.f('reviews_book_uid_fkey'), 'reviews', type_='foreignkey')
    op.drop_constraint(op.f('reviews_user_uid_fkey'), 'reviews', type_='foreignkey')
    op.create_foreign_key(None, 'reviews', 'books', ['book_uid'], ['uid'], ondelete='CASCADE')
    op.create_foreign_key(None, 'reviews', 'users', ['user_uid'], ['uid'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.create_foreign_key(op.f('reviews_user_uid_fkey'), 'reviews', 'users', ['user_uid'], ['uid'])
    op.create_foreign_key(op.f('reviews_book_uid_fkey'), 'reviews', 'books', ['book_uid'], ['uid'])
    op.alter_column('reviews', 'book_uid',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('reviews', 'user_uid',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint(None, 'books', type_='foreignkey')
    op.create_foreign_key(op.f('books_user_uid_fkey'), 'books', 'users', ['user_uid'], ['uid'])
    op.alter_column('books', 'user_uid',
               existing_type=sa.UUID(),
               nullable=True)
    # ### end Alembic commands ###
